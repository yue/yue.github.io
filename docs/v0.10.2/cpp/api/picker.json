{
  "name": "Picker",
  "component": "gui",
  "header": "nativeui/picker.h",
  "type": "refcounted",
  "namespace": "nu",
  "inherit": {
    "name": "View",
    "id": "view"
  },
  "description": "Choose a single item from a list of items.",
  "detail": "By default, the first item is automatically selected, and duplicate items\nare merged into one.\n",
  "constructors": [
    {
      "signature": {
        "name": "Picker",
        "parameters": [],
        "shortStr": "Picker()",
        "str": "Picker()"
      },
      "description": "Create a new `Picker` view.",
      "id": "picker"
    }
  ],
  "class_properties": [
    {
      "description": "The class name of this view.",
      "id": "kclassname",
      "type": {
        "name": "const char*"
      },
      "name": "kClassName"
    }
  ],
  "methods": [
    {
      "signature": {
        "name": "AddItem",
        "parameters": [
          {
            "type": {
              "name": "const std::string&"
            },
            "name": "title"
          }
        ],
        "shortStr": "AddItem(title)",
        "str": "void AddItem(const std::string& title)"
      },
      "description": "Add an item with `title` to the end.",
      "id": "additem-title"
    },
    {
      "signature": {
        "name": "RemoveItemAt",
        "parameters": [
          {
            "type": {
              "name": "int"
            },
            "name": "index"
          }
        ],
        "shortStr": "RemoveItemAt(index)",
        "str": "void RemoveItemAt(int index)"
      },
      "description": "Remove the item at `index`.",
      "id": "removeitemat-index"
    },
    {
      "signature": {
        "returnType": {
          "name": "std::vector<std::string>"
        },
        "name": "GetItems",
        "parameters": [],
        "shortStr": "GetItems()",
        "str": "std::vector<std::string> GetItems() const"
      },
      "description": "Return all items.",
      "id": "getitems"
    },
    {
      "signature": {
        "name": "SelectItemAt",
        "parameters": [
          {
            "type": {
              "name": "int"
            },
            "name": "index"
          }
        ],
        "shortStr": "SelectItemAt(index)",
        "str": "void SelectItemAt(int index)"
      },
      "description": "Select the item at `index`.",
      "id": "selectitemat-index"
    },
    {
      "signature": {
        "returnType": {
          "name": "std::string"
        },
        "name": "GetSelectedItem",
        "parameters": [],
        "shortStr": "GetSelectedItem()",
        "str": "std::string GetSelectedItem() const"
      },
      "description": "Return the title of selected item.",
      "detail": "Empty string is returned if there is no selected item.",
      "id": "getselecteditem"
    },
    {
      "signature": {
        "returnType": {
          "name": "int"
        },
        "name": "GetSelectedItemIndex",
        "parameters": [],
        "shortStr": "GetSelectedItemIndex()",
        "str": "int GetSelectedItemIndex() const"
      },
      "description": "Return the index of selected item.",
      "detail": "-1 is returned if there is no selected item.",
      "id": "getselecteditemindex"
    }
  ],
  "events": [
    {
      "signature": {
        "name": "on_selection_change",
        "parameters": [
          {
            "type": {
              "name": "Picker*",
              "id": "picker"
            },
            "name": "self"
          }
        ],
        "shortStr": "on_selection_change(self)",
        "str": "void on_selection_change(Picker* self)"
      },
      "description": "Emitted when user has changed the selected item.",
      "id": "onselectionchange-self"
    }
  ],
  "id": "picker"
}