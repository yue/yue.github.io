{
  "name": "ProtocolJob",
  "component": "gui",
  "header": "nativeui/protocol_job.h",
  "type": "refcounted",
  "namespace": "nu",
  "description": "Response to custom protocol requests.",
  "detail": "This class can not be used to create instances, you must use its sub-classes\ninstead.\n\nNote that the interface of this class will be modified in future for\nextensions.\n",
  "methods": [
    {
      "signature": {
        "returnType": {
          "name": "bool"
        },
        "name": "Start",
        "parameters": [],
        "str": "bool Start()"
      },
      "description": "Called when the loading of request should start.",
      "detail": "Returning `false` would cancel the request.\n\nThis method is asynchronous, when the request is ready to be read, the\n`notify_content_length` function property of this class should be called\nwith `notify_content_length(size)`. The `size` is the expected length\nof the data to be read, pass `-1` if uncertain.\n",
      "id": "start"
    },
    {
      "signature": {
        "name": "Kill",
        "parameters": [],
        "str": "void Kill()"
      },
      "description": "Called when the loading should be stopped.",
      "id": "kill"
    },
    {
      "signature": {
        "returnType": {
          "name": "bool"
        },
        "name": "GetMimeType",
        "parameters": [
          {
            "type": {
              "name": "std::string*"
            },
            "name": "mimetype"
          }
        ],
        "str": "bool GetMimeType(std::string* mimetype)"
      },
      "description": "Called when browser wants to get mime type of the request.",
      "detail": "Returning `false` would leave the browser to guess the mime type.\n\nDepending on the platform, this method may be called before and after the\nrequest is started, and it may be called in a different thread from the\none it was created.\n",
      "id": "getmimetype-mimetype"
    },
    {
      "signature": {
        "returnType": {
          "name": "size_t"
        },
        "name": "Read",
        "parameters": [
          {
            "type": {
              "name": "void*"
            },
            "name": "buffer"
          },
          {
            "type": {
              "name": "size_t"
            },
            "name": "bytes"
          }
        ],
        "str": "size_t Read(void* buffer, size_t bytes)"
      },
      "description": "Called when browser wants to read data.",
      "detail": "The data should be written to the `buffer`, which has the size of `bytes`.\nIt should return size of data written, returning `0` means there is no\nmore data.\n",
      "id": "read-buffer-bytes"
    }
  ],
  "properties": [
    {
      "description": "Called by sub-classes when it is ready to read data.",
      "id": "notifycontentlength",
      "type": {
        "name": "std::function<void(int)>"
      },
      "name": "notify_content_length"
    }
  ],
  "id": "protocoljob"
}