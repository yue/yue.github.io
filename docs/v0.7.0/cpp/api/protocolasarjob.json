{
  "name": "ProtocolAsarJob",
  "component": "gui",
  "header": "nativeui/protocol_file_job.h",
  "type": "refcounted",
  "namespace": "nu",
  "inherit": {
    "name": "ProtocolJob",
    "id": "protocoljob"
  },
  "description": "Read asar archives to serve custom protocol requests.",
  "detail": "The asar format is a simple extensive archive format, information of it can be\nfound at https://github.com/electron/asar.\n\nAs an experimental feature, Yue supports reading from encrypted asar archives,\nwhich has not been a standard feature of asar yet but will probably be in\nfuture. More about this can be found at https://github.com/yue/muban.\n",
  "constructors": [
    {
      "signature": {
        "name": "ProtocolAsarJob",
        "parameters": [
          {
            "type": {
              "name": "const base::FilePath&",
              "id": "base_filepath"
            },
            "name": "asar"
          },
          {
            "type": {
              "name": "const std::string&"
            },
            "name": "path"
          }
        ],
        "str": "ProtocolAsarJob(const base::FilePath& asar, const std::string& path)"
      },
      "description": "Create a `ProtocolAsarJob` with `path` to a file inside an `asar` archive.\n",
      "id": "protocolasarjob-asar-path"
    }
  ],
  "methods": [
    {
      "signature": {
        "returnType": {
          "name": "bool"
        },
        "name": "SetDecipher",
        "parameters": [
          {
            "type": {
              "name": "const std::string&"
            },
            "name": "key"
          },
          {
            "type": {
              "name": "const std::string&"
            },
            "name": "iv"
          }
        ],
        "str": "bool SetDecipher(const std::string& key, const std::string& iv)"
      },
      "description": "Set the `key` and `iv` used to read from an encrypted asar archive, return\n`false` when the `key` and `iv` are not 16 bytes length.\n",
      "detail": "The encrypted asar archives use AES128 ECB algorithm for encryption, with\nPKCS#7 padding.\n",
      "id": "setdecipher-key-iv"
    }
  ],
  "id": "protocolasarjob"
}