{
  "name": "MessageLoop",
  "component": "gui",
  "header": "nativeui/message_loop.h",
  "type": "table",
  "namespace": "nu",
  "description": "Post events to main GUI message loop.",
  "detail": "Depending on the runtime you use, Yue may or may not provide this API.\n\nNote that `MessageLoop` is a class instead of an instance, the APIs are\nprovided as class methods. This is because the `MessageLoop` does not manage\nmessage loop, it just provides wrappers of system GUI message loop APIs.\n\nThis class can not be created by user, you can only call its class methods.\n\n```lua\nlocal gui = require('yue.gui')\ngui.MessageLoop.run()\n```\n",
  "class_methods": [
    {
      "signature": {
        "name": "run",
        "parameters": [],
        "shortStr": "run()",
        "str": "run()"
      },
      "description": "Enter GUI message loop.",
      "id": "run"
    },
    {
      "signature": {
        "name": "quit",
        "parameters": [],
        "shortStr": "quit()",
        "str": "quit()"
      },
      "description": "Quit current message loop.",
      "id": "quit"
    },
    {
      "signature": {
        "name": "posttask",
        "parameters": [
          {
            "type": {
              "name": "function"
            },
            "name": "task"
          }
        ],
        "shortStr": "posttask(task)",
        "str": "posttask(task)"
      },
      "description": "Post a `task` to main thread's message loop.",
      "id": "posttask-task"
    },
    {
      "signature": {
        "name": "postdelayedtask",
        "parameters": [
          {
            "type": {
              "name": "integer"
            },
            "name": "ms",
            "description": "The number of milliseconds to wait"
          },
          {
            "type": {
              "name": "function"
            },
            "name": "task"
          }
        ],
        "shortStr": "postdelayedtask(ms, task)",
        "str": "postdelayedtask(ms, task)"
      },
      "description": "Post a `task` to main thread's message loop and execute it after `ms`.\n",
      "id": "postdelayedtask-ms-task"
    },
    {
      "signature": {
        "name": "settimer",
        "parameters": [
          {
            "type": {
              "name": "integer"
            },
            "name": "ms",
            "description": "The number of milliseconds to wait"
          },
          {
            "type": {
              "name": "function"
            },
            "name": "task"
          }
        ],
        "shortStr": "settimer(ms, task)",
        "str": "settimer(ms, task)"
      },
      "description": "Enqueue a task `task` to be run multiple times on the main thread's\nmessage loop, delaying every `ms` miliseconds, and stopping if the task\nreturns `false`.\n",
      "id": "settimer-ms-task"
    }
  ],
  "module": "yue.gui",
  "id": "message_loop"
}